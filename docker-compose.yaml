version: '3'

services: 
    rndmicu:
        build:
            context: .
            dockerfile: docker/Dockerfile
        ports: 
            - '8080:8080'
        environment: 
            # DB
            - DB_HOST=db:5432
            - DB_PATH=${DB_PATH}
            - DB_USERNAME=${DB_USERNAME}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_DISABLE_TLS=${DB_DISABLE_TLS}
            # S3
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
            - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
            - AWS_CDN_BASE_URL=${AWS_CDN_BASE_URL}
        depends_on: 
            - db
        networks: 
            - rndmicu_network
    
    db:
        image: postgres:latest
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "healthcheck_user" ]
            timeout: 45s
            interval: 10s
            retries: 10
        ports:
            - '5432:5432'
        expose:
            - '5432'
        environment: 
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_PATH}
        volumes:
            - ./docker/db/data:/var/lib/postgresql/data
            - ./docker/db/init_scripts:/docker-entrypoint-initdb.d/
        restart: on-failure
        networks: 
            - rndmicu_network

networks: 
    rndmicu_network: {}